[{"path":"index.html","id":"introduction-to-epigenome-wide-association-studies-ewas","chapter":"Introduction to Epigenome-Wide Association Studies (EWAS)","heading":"Introduction to Epigenome-Wide Association Studies (EWAS)","text":" Coordinator: Juan Ramon González\n lecturers: Mariona Bustamante, Sofía Aguilar-Lacasaña, Laura Balagué\n Aim: introduce basic concepts guidelines conduct epigenome-wide association studies (EWAS) using DNA methylation data obtained arrays.\n Learning Objectives: Upon successful completion module, participants able conduct:Pre-processing DNA methylation dataEpigenome-wide association studies (EWAS)Meta-analysis EWAS different studiesAnnotation functional interpretation findings\n Additional requirements:Required: Intermediate knowledge R environment.Recommended resources: Laptop computer >8Gb RAMTime Slot 1: 9 11 h CESTTeaching language: English","code":""},{"path":"resources-and-tools-for-epigenetics-in-bioconductor.html","id":"resources-and-tools-for-epigenetics-in-bioconductor","chapter":"1 Resources and tools for epigenetics in Bioconductor","heading":"1 Resources and tools for epigenetics in Bioconductor","text":"section offers summary main data structures implemented Bioconductor dealing epigenomic data data. Omic data typically composed three datasets: one containing actual high-dimensional data omic variables per individuals, annotation data specifies characteristics variables phenotypic information encodes subject’s traits interest, covariates sampling characteristics. Bioconductor can effectively deal data using (among others) ExpressionSet objects data structure contains beta values individuals CpG, genomic information phenotypes individuals. Specific data accessed, processed analyzed specific functions diverse packages, conceived methods acting ExpressionSet object.","code":""},{"path":"resources-and-tools-for-epigenetics-in-bioconductor.html","id":"bioconductor","chapter":"1 Resources and tools for epigenetics in Bioconductor","heading":"1.1 Bioconductor","text":"Bioconductor: Analysis comprehension high-throughput\ngenomic dataStatistical analysis: large data, technological artifacts, designed\nexperiments; rigorousComprehension: biological context, visualization, reproducibilityHigh-throughput\nSequencing: RNASeq, ChIPSeq, variants, copy number, …\nMicroarrays: expression, SNP, …\nFlow cytometry, proteomics, images, …\nSequencing: RNASeq, ChIPSeq, variants, copy number, …Microarrays: expression, SNP, …Flow cytometry, proteomics, images, …Packages, vignettes, work flows2230 packages (Apr’23); including …‘Software’ packages – statistical methods, pipelines, …‘Annotation’ packages – static data bases identifier maps,\ngene models, pathways, etc; e.g., TxDb.Hsapiens.UCSC.hg19.knownGene’Experiment packages – data sets used illustrate software\nfunctionality, e.g., airwayDiscover navigate via biocViewsPackage ‘landing page’\nTitle, author / maintainer, short description, citation,\ninstallation instructions, …, download statistics\nTitle, author / maintainer, short description, citation,\ninstallation instructions, …, download statisticsAll user-visible functions help pages, runnable\nexamples‘Vignettes’ important feature Bioconductor – narrative\ndocuments illustrating use package, integrated code‘Release’ (every six months) ‘devel’ branchesSupport site;\nvideos;\nrecent courses.Common WorkflowsPackage installation useA package needs installed , using instructions \npackage landing page (e.g., DESeq2).\n\nrequire(BiocManager)\ninstall(\"DESeq2\")\n\n# \n\nBiocManager::install(\"DESeq2\")package needs installed , using instructions \npackage landing page (e.g., DESeq2).older versions can installed \n\nBiocManager::install(\"DESeq2\", version = \"3.8\")older versions can installed byinstall() install Bioconductor CRANinstall() install Bioconductor CRANGithub packages can install \n\ndevtools::install_github(\"isglobal-brge/SNPassoc\")Github packages can install byOnce installed, package can loaded R session\n\nlibrary(GenomicRanges)\nhelp system queried interactively, outlined :\n\nhelp(package=\"GenomicRanges\")\nvignette(package=\"GenomicRanges\")\nvignette(package=\"GenomicRanges\", \"GenomicRangesHOWTOs\")\n?GRangesOnce installed, package can loaded R sessionand help system queried interactively, outlined :","code":"\nrequire(BiocManager)\ninstall(\"DESeq2\")\n\n# or\n\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"DESeq2\", version = \"3.8\")\ndevtools::install_github(\"isglobal-brge/SNPassoc\")\nlibrary(GenomicRanges)\nhelp(package=\"GenomicRanges\")\nvignette(package=\"GenomicRanges\")\nvignette(package=\"GenomicRanges\", \"GenomicRangesHOWTOs\")\n?GRanges"},{"path":"resources-and-tools-for-epigenetics-in-bioconductor.html","id":"expressionset-and-genomicratioset-and-others-granges","chapter":"1 Resources and tools for epigenetics in Bioconductor","heading":"1.2 ExpressionSet and GenomicRatioSet (and others: GRanges)","text":"ExpressionSetwas one first implementations Bioconductor manage omic experiments. figure illustrates implemented\nFigure 1.1: ExpressionSet scheme.\nAlthough use discouraged Bioconductor’s guidelines development current future packages (Summarized Experiments preferred), publicly data available structure future packages still required able upload operate . case GEO (Gene Expression Omnibus) international public repository hosts freely distribute extensive collection high-throughput gene expression data generated technologies like microarrays RNA sequencing.","code":""},{"path":"resources-and-tools-for-epigenetics-in-bioconductor.html","id":"gene-expression-omnibus-geo-repository","chapter":"1 Resources and tools for epigenetics in Bioconductor","heading":"1.2.1 Gene Expression Omnibus (GEO) repository","text":"Researchers diverse fields can upload data GEO, making accessible scientific community analysis interpretation. One notable benefits GEO role validating results studies. comparing contrasting findings existing datasets, researchers can corroborate conclusions ensure reproducibility experiments. validation process essential building robust foundation knowledge molecular biology fostering scientific progress collaborative efforts data-driven insights.GEO initially designed deal transcriptomic data, can also used repository epigenomic data. example, can investigate methylation differences cases diagnoses Alzheimer’s disease controls using publicly available data. study accession number GSE80970, case/control (\\(N=148/138\\)) study epigenomic data, measured Illumina Infinium Human 450K Methylation Array. Data retrieved directly GEO website accession number.Data specific accessions GEO can downloaded R using getGEO Bioconductor’s package GEOqueryThis function downloads data file called GSE80970\\_series\\_matrix.txt.gz retrieved automatically ExpressionSet object (objects explain latter) named gms.exprAn object class ExpressionSet stores different tables including expression profiles probe subject assayData, phenotype data traits measurements covariates interest pData, feature data information probe’s used expression (methylation) array fData (e.g. annotation). Specific data retrieved using necessary functions. particular, exprs () phenoData () extract data tables subjects’ expression levels phenotypes/covariates, respectively. three slots protocolData, experimentData annotation (uses Bioconductor databases annotation data - .e. requires fData) specify equipment-generated information protocols, resulting publications platform samples assayed. Methods implemented extract data slot object.Let us see works. function exprs () extracts epigenetic data matrix subjects columns probes rowsPhenotypes /covariates can accessed using phenoData () functionNote phenoData() retrieves subjects’ phenotypes AnnotatedDataFrame object converted data.frame function pData()can , instance, look CpGs located APP gene. end, function fData () usedAfter can run different analyses. Also, several packages Bioconductor input ExpressionSet objects.","code":"\nlibrary(GEOquery)## Setting options('download.file.method.GEOquery'='auto')## Setting options('GEOquery.inmemory.gpl'=FALSE)\nif(!dir.exists(\"c:/tmp\"))\n  dir.create(\"c:/tmp\")\n\ngsm <- getGEO(\"GSE80970\", destdir = \"c:/tmp\")## Found 1 file(s)## GSE80970_series_matrix.txt.gz\ngsm <- gsm[[1]]\nclass(gsm)## [1] \"ExpressionSet\"\n## attr(,\"package\")\n## [1] \"Biobase\"\ngsm## ExpressionSet (storageMode: lockedEnvironment)\n## assayData: 485577 features, 286 samples \n##   element names: exprs \n## protocolData: none\n## phenoData\n##   sampleNames: GSM2139163 GSM2139164 ... GSM2139448 (286 total)\n##   varLabels: title geo_accession ... tissue:ch1 (45 total)\n##   varMetadata: labelDescription\n## featureData\n##   featureNames: cg00000029 cg00000108 ... rs9839873 (485577 total)\n##   fvarLabels: ID Name ... SPOT_ID (37 total)\n##   fvarMetadata: Column Description labelDescription\n## experimentData: use 'experimentData(object)'\n##   pubMedIds: 29550519 \n## Annotation: GPL13534\n#get epigenetic data \nexpr <- exprs(gsm)\ndim(expr)## [1] 485577    286\nexpr[1:10, 1:5]##            GSM2139163 GSM2139164 GSM2139165 GSM2139166 GSM2139167\n## cg00000029    0.59167    0.61134    0.52240    0.55689    0.66928\n## cg00000108    0.86955    0.87228    0.82742    0.89817    0.88524\n## cg00000109    0.71494    0.68538    0.74456    0.76460    0.74441\n## cg00000165    0.28111    0.26410    0.23158    0.27409    0.27160\n## cg00000236    0.81495    0.78115    0.80187    0.80274    0.83936\n## cg00000289    0.49322    0.51915    0.64688    0.55270    0.55591\n## cg00000292    0.70312    0.67248    0.63095    0.64757    0.67921\n## cg00000321    0.56316    0.54221    0.48866    0.63993    0.61028\n## cg00000363    0.20862    0.24135    0.20399    0.22668    0.24959\n## cg00000622    0.04034    0.03450    0.03127    0.03291    0.02887\n#get phenotype data\npheno <- pData(phenoData(gsm))\nhead(pheno)\n#main variable used to be stored in: \ntable(pheno$characteristics_ch1)## \n##       tissue: prefrontal cortex tissue: superior temporal gyrus \n##                             142                             144\n#get the annotation\nannot <- fData(gsm)\n\ncolnames(annot)##  [1] \"ID\"                          \"Name\"                        \"AddressA_ID\"                \n##  [4] \"AlleleA_ProbeSeq\"            \"AddressB_ID\"                 \"AlleleB_ProbeSeq\"           \n##  [7] \"Infinium_Design_Type\"        \"Next_Base\"                   \"Color_Channel\"              \n## [10] \"Forward_Sequence\"            \"Genome_Build\"                \"CHR\"                        \n## [13] \"MAPINFO\"                     \"SourceSeq\"                   \"Chromosome_36\"              \n## [16] \"Coordinate_36\"               \"Strand\"                      \"Probe_SNPs\"                 \n## [19] \"Probe_SNPs_10\"               \"Random_Loci\"                 \"Methyl27_Loci\"              \n## [22] \"UCSC_RefGene_Name\"           \"UCSC_RefGene_Accession\"      \"UCSC_RefGene_Group\"         \n## [25] \"UCSC_CpG_Islands_Name\"       \"Relation_to_UCSC_CpG_Island\" \"Phantom\"                    \n## [28] \"DMR\"                         \"Enhancer\"                    \"HMM_Island\"                 \n## [31] \"Regulatory_Feature_Name\"     \"Regulatory_Feature_Group\"    \"DHS\"                        \n## [34] \"RANGE_START\"                 \"RANGE_END\"                   \"RANGE_GB\"                   \n## [37] \"SPOT_ID\"\n#access to the names of genes in UCSC format\ngeneIDs <- annot$UCSC_RefGene_Name\ngenesIDs <- as.character(unlist(genesIDs))\n\nselAPP <- grep(\"APP;APP\",genesIDs)\nlength(selAPP)## [1] 21"},{"path":"resources-and-tools-for-epigenetics-in-bioconductor.html","id":"summarizedexperiment","chapter":"1 Resources and tools for epigenetics in Bioconductor","heading":"1.2.2 SummarizedExperiment","text":"SummarizedExperiment class comprehensive data structure can used store expression methylation data microarrays read counts RNA-seq experiments, among others. SummarizedExperiment object contains slots one datasets, feature annotation (e.g. genes, transcripts, SNPs, CpGs), individual phenotypes experimental details, laboratory experimental protocols. SummarizedExperiment, rows omic data features columns subjects.SummarizedExperimentInformation coordinated across object’s slots. instance, subsetting samples assay matrix automatically subsets phenotype metadata. SummarizedExperimentobject easily manipulated constitutes input output many Bioconductor’s methods.Data retrieved SummarizedExperiment using specific methods accessors. illustrate functions brge_methy includes real methylation data available Bioconductor’s brgedata package. data made available loading packageThe function extends() shows data encoded object GenomicRatioSet class, extension primitive classes RangedSummarizedExperiment SummarizedExperiment. brge_methy illustrates typical object within Bioconductor’s framework, structure inherits different types classes established hierarchy. class, specific methods properly inherited across classes. instance, example, SummarizedExperiment brge_methy’s primitive omic class , therefore, methods SummarizedExperiment apply . particular, methylation data stored object can extracted function assay()assay slot SummarizedExperiment object can contain type data (.e. numeric, character, factor…), structure large -disk representations, HDF5Array. Feature annotation data accessed function rowData():returns data.frame object. example, contains sequences genes associated CpG probes, among information.","code":"\nlibrary(brgedata)\nbrge_methy## class: GenomicRatioSet \n## dim: 392277 20 \n## metadata(0):\n## assays(1): Beta\n## rownames(392277): cg13869341 cg24669183 ... cg26251715 cg25640065\n## rowData names(14): Forward_Sequence SourceSeq ... Regulatory_Feature_Group DHS\n## colnames(20): x0017 x0043 ... x0077 x0079\n## colData names(9): age sex ... Mono Neu\n## Annotation\n##   array: IlluminaHumanMethylation450k\n##   annotation: ilmn12.hg19\n## Preprocessing\n##   Method: NA\n##   minfi version: NA\n##   Manifest version: NA\nextends(\"GenomicRatioSet\")## [1] \"GenomicRatioSet\"            \"RangedSummarizedExperiment\" \"SummarizedExperiment\"       \"RectangularData\"            \"Vector\"                    \n## [6] \"Annotated\"                  \"vector_OR_Vector\"\nbetas <- assay(brge_methy)\nbetas[1:5, 1:4]##                 x0017      x0043     x0036      x0041\n## cg13869341 0.90331003 0.90082827 0.8543610 0.84231205\n## cg24669183 0.86349463 0.84009629 0.8741255 0.85122181\n## cg15560884 0.65986032 0.69634338 0.6931083 0.69752294\n## cg01014490 0.01448404 0.01509478 0.0163614 0.01322362\n## cg17505339 0.92176287 0.92060149 0.9101060 0.93249167\nrowData(brge_methy)[,2:5]## DataFrame with 392277 rows and 4 columns\n##                         SourceSeq Random_Loci Methyl27_Loci         genes\n##                       <character> <character>   <character>   <character>\n## cg13869341 CCGGTGGCTGGCCACTCTGC..                                  WASH5P\n## cg24669183 TCACCGCCTTGACAGCTTTG..                                        \n## cg15560884 CGCGTAAACAAGGGAAGCTG..                                        \n## cg01014490 TCAGAACTCGCGGTGGGGGC..                                        \n## cg17505339 AAACAAACAAAGATATCAAG..                                        \n## ...                           ...         ...           ...           ...\n## cg04964672 CGGCGGCTTTCCACGCTGCG..                                        \n## cg01086462 CGCAGGTATGGTGTACATTA..                                        \n## cg02233183 CAAAATGAATGAAATTTACA..                           NLGN4Y;NLGN4Y\n## cg26251715 CGCTGGTTGTCCAGGCTGGA..                                  TTTY14\n## cg25640065 CGGGGCAGGGGTCCGTAACT.."},{"path":"resources-and-tools-for-epigenetics-in-bioconductor.html","id":"genomic-ranges-granges","chapter":"1 Resources and tools for epigenetics in Bioconductor","heading":"1.2.3 Genomic Ranges (GRanges)","text":"Bioconductor’s package GenomicRanges aims represent manipulate genomic annotation molecular omic data reference genome. contains functions select specific regions perform operations (Lawrence 2013). Objects GRanges class important annotate manipulate genomic, transcriptomic methylomic data. particular, used conjunction SummarizedExperiment, within RangedSummarizedExperiment class explained following section.Annotation data refers characteristics variables high-dimensional data set. particular omic data relative DNA structure function, variable may given location reference genome. two genomes identical, construction reference genome allows mapping specific characteristics individual genomes common ground can compared. reference genome defines coordinate system: “chromosome id” “position along chromosome”. instance, position chr10:4567-5671 represent 4567th 5671st base pair reference’s chromosome 10.main functionalities implemented GenomicRanges methods GRanges objects. Objects created function GRanges, minimum requirements genomic positions given chromosome seqnames base pair coordinates ranges. metadata (e.g. variables) can added provide information segment.illustrate GenomicRanges creating 8 segments either chr1 chr2, defined start end points. add strand information, passed argument strand, indicate direction sequence. also add hypothetical variable disease indicates whether asthma obesity associated intervalgr constructed object class GRanges. object responds usual array subset extraction given squared parenthesesHowever, also specific functions access modify information. instance, seqnames() extract chromosomes defined examples, whose first element can redefined accordingly:important annotation using different system. NCBI encodes chromosomes 1, 2, 3, …; UCSC uses chr1, chr2, … chromosome style can changed usingLet’s us write back UCSC styleAdditional information can added current object new field listGenomicRanges provides different methods perform arithmetic ranges, see ?GRanges full list. instance, shift() interval moved given base-pair distance flank() interval stretchedGenomicRanges also includes methods aggregating summarizing GRangesobjects. functions reduce(), disjoint() coverage() useful. disjoin(), instance, reduces intervals smallest set unique, non-overlapping pieces make original object. strand-specific default, can avoided ignore.strand=TRUE.reduce() creates smallest range set unique, non-overlapping intervals. Strand information also taken account default can also turned offcoverage() summarizes times base covered intervalIt also possible perform operations two different GRanges objects. instance, one may interested knowing intervals overlap targeted region:recover overlapping intervals gr target can runorOther operations can found .","code":"\nlibrary(GenomicRanges)\ngr <- GRanges(seqnames=c(rep(\"chr1\", 4), rep(\"chr2\", 4)),\n              ranges = IRanges(start = c(1000, 1800, 5300, 7900,\n                                         1300, 2100, 3400, 6700),\n                               end =c(2200, 3900, 5400, 8100,\n                                      2600, 3300, 4460, 6850)),\n              strand = rep(c(\"+\", \"-\"), 4),\n              disease = c(rep(\"Asthma\",4), rep(\"Obesity\",4)))\ngr## GRanges object with 8 ranges and 1 metadata column:\n##       seqnames    ranges strand |     disease\n##          <Rle> <IRanges>  <Rle> | <character>\n##   [1]     chr1 1000-2200      + |      Asthma\n##   [2]     chr1 1800-3900      - |      Asthma\n##   [3]     chr1 5300-5400      + |      Asthma\n##   [4]     chr1 7900-8100      - |      Asthma\n##   [5]     chr2 1300-2600      + |     Obesity\n##   [6]     chr2 2100-3300      - |     Obesity\n##   [7]     chr2 3400-4460      + |     Obesity\n##   [8]     chr2 6700-6850      - |     Obesity\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\ngr[1]## GRanges object with 1 range and 1 metadata column:\n##       seqnames    ranges strand |     disease\n##          <Rle> <IRanges>  <Rle> | <character>\n##   [1]     chr1 1000-2200      + |      Asthma\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\nseqnames(gr)## factor-Rle of length 8 with 2 runs\n##   Lengths:    4    4\n##   Values : chr1 chr2\n## Levels(2): chr1 chr2\nseqnames(gr)[1] <- \"chr2\"\ngr## GRanges object with 8 ranges and 1 metadata column:\n##       seqnames    ranges strand |     disease\n##          <Rle> <IRanges>  <Rle> | <character>\n##   [1]     chr2 1000-2200      + |      Asthma\n##   [2]     chr1 1800-3900      - |      Asthma\n##   [3]     chr1 5300-5400      + |      Asthma\n##   [4]     chr1 7900-8100      - |      Asthma\n##   [5]     chr2 1300-2600      + |     Obesity\n##   [6]     chr2 2100-3300      - |     Obesity\n##   [7]     chr2 3400-4460      + |     Obesity\n##   [8]     chr2 6700-6850      - |     Obesity\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\nseqlevelsStyle(gr) <- \"NCBI\"\ngr## GRanges object with 8 ranges and 1 metadata column:\n##       seqnames    ranges strand |     disease\n##          <Rle> <IRanges>  <Rle> | <character>\n##   [1]        2 1000-2200      + |      Asthma\n##   [2]        1 1800-3900      - |      Asthma\n##   [3]        1 5300-5400      + |      Asthma\n##   [4]        1 7900-8100      - |      Asthma\n##   [5]        2 1300-2600      + |     Obesity\n##   [6]        2 2100-3300      - |     Obesity\n##   [7]        2 3400-4460      + |     Obesity\n##   [8]        2 6700-6850      - |     Obesity\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\nseqlevelsStyle(gr) <- \"UCSC\"\ngr## GRanges object with 8 ranges and 1 metadata column:\n##       seqnames    ranges strand |     disease\n##          <Rle> <IRanges>  <Rle> | <character>\n##   [1]     chr2 1000-2200      + |      Asthma\n##   [2]     chr1 1800-3900      - |      Asthma\n##   [3]     chr1 5300-5400      + |      Asthma\n##   [4]     chr1 7900-8100      - |      Asthma\n##   [5]     chr2 1300-2600      + |     Obesity\n##   [6]     chr2 2100-3300      - |     Obesity\n##   [7]     chr2 3400-4460      + |     Obesity\n##   [8]     chr2 6700-6850      - |     Obesity\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\ngr$gene_id <- paste0(\"Gene\", 1:8)\ngr## GRanges object with 8 ranges and 2 metadata columns:\n##       seqnames    ranges strand |     disease     gene_id\n##          <Rle> <IRanges>  <Rle> | <character> <character>\n##   [1]     chr2 1000-2200      + |      Asthma       Gene1\n##   [2]     chr1 1800-3900      - |      Asthma       Gene2\n##   [3]     chr1 5300-5400      + |      Asthma       Gene3\n##   [4]     chr1 7900-8100      - |      Asthma       Gene4\n##   [5]     chr2 1300-2600      + |     Obesity       Gene5\n##   [6]     chr2 2100-3300      - |     Obesity       Gene6\n##   [7]     chr2 3400-4460      + |     Obesity       Gene7\n##   [8]     chr2 6700-6850      - |     Obesity       Gene8\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\n#shift: move all intervals 10 base pair towards the end\nshift(gr, 10)## GRanges object with 8 ranges and 2 metadata columns:\n##       seqnames    ranges strand |     disease     gene_id\n##          <Rle> <IRanges>  <Rle> | <character> <character>\n##   [1]     chr2 1010-2210      + |      Asthma       Gene1\n##   [2]     chr1 1810-3910      - |      Asthma       Gene2\n##   [3]     chr1 5310-5410      + |      Asthma       Gene3\n##   [4]     chr1 7910-8110      - |      Asthma       Gene4\n##   [5]     chr2 1310-2610      + |     Obesity       Gene5\n##   [6]     chr2 2110-3310      - |     Obesity       Gene6\n##   [7]     chr2 3410-4470      + |     Obesity       Gene7\n##   [8]     chr2 6710-6860      - |     Obesity       Gene8\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\n#shift: move each intervals individually\nshift(gr, seq(10,100, length=8))## GRanges object with 8 ranges and 2 metadata columns:\n##       seqnames    ranges strand |     disease     gene_id\n##          <Rle> <IRanges>  <Rle> | <character> <character>\n##   [1]     chr2 1010-2210      + |      Asthma       Gene1\n##   [2]     chr1 1822-3922      - |      Asthma       Gene2\n##   [3]     chr1 5335-5435      + |      Asthma       Gene3\n##   [4]     chr1 7948-8148      - |      Asthma       Gene4\n##   [5]     chr2 1361-2661      + |     Obesity       Gene5\n##   [6]     chr2 2174-3374      - |     Obesity       Gene6\n##   [7]     chr2 3487-4547      + |     Obesity       Gene7\n##   [8]     chr2 6800-6950      - |     Obesity       Gene8\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\n#flank:  recover regions next to the input set. \n#        For a 50 base stretch upstream (negative value for\n#        downstream)\nflank(gr, 50)## GRanges object with 8 ranges and 2 metadata columns:\n##       seqnames    ranges strand |     disease     gene_id\n##          <Rle> <IRanges>  <Rle> | <character> <character>\n##   [1]     chr2   950-999      + |      Asthma       Gene1\n##   [2]     chr1 3901-3950      - |      Asthma       Gene2\n##   [3]     chr1 5250-5299      + |      Asthma       Gene3\n##   [4]     chr1 8101-8150      - |      Asthma       Gene4\n##   [5]     chr2 1250-1299      + |     Obesity       Gene5\n##   [6]     chr2 3301-3350      - |     Obesity       Gene6\n##   [7]     chr2 3350-3399      + |     Obesity       Gene7\n##   [8]     chr2 6851-6900      - |     Obesity       Gene8\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\ndisjoin(gr, ignore.strand=TRUE)## GRanges object with 10 ranges and 0 metadata columns:\n##        seqnames    ranges strand\n##           <Rle> <IRanges>  <Rle>\n##    [1]     chr1 1800-3900      *\n##    [2]     chr1 5300-5400      *\n##    [3]     chr1 7900-8100      *\n##    [4]     chr2 1000-1299      *\n##    [5]     chr2 1300-2099      *\n##    [6]     chr2 2100-2200      *\n##    [7]     chr2 2201-2600      *\n##    [8]     chr2 2601-3300      *\n##    [9]     chr2 3400-4460      *\n##   [10]     chr2 6700-6850      *\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\nGenomicRanges::reduce(gr, ignore.strand=TRUE)## GRanges object with 6 ranges and 0 metadata columns:\n##       seqnames    ranges strand\n##          <Rle> <IRanges>  <Rle>\n##   [1]     chr1 1800-3900      *\n##   [2]     chr1 5300-5400      *\n##   [3]     chr1 7900-8100      *\n##   [4]     chr2 1000-3300      *\n##   [5]     chr2 3400-4460      *\n##   [6]     chr2 6700-6850      *\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\ncoverage(gr)## RleList of length 2\n## $chr1\n## integer-Rle of length 8100 with 6 runs\n##   Lengths: 1799 2101 1399  101 2499  201\n##   Values :    0    1    0    1    0    1\n## \n## $chr2\n## integer-Rle of length 6850 with 10 runs\n##   Lengths:  999  300  800  101  400  700   99 1061 2239  151\n##   Values :    0    1    2    3    2    1    0    1    0    1\ntarget <- GRanges(seqnames=\"chr1\", \n                  range=IRanges(start=1200, 4000))\ntarget## GRanges object with 1 range and 0 metadata columns:\n##       seqnames    ranges strand\n##          <Rle> <IRanges>  <Rle>\n##   [1]     chr1 1200-4000      *\n##   -------\n##   seqinfo: 1 sequence from an unspecified genome; no seqlengths\ngr.ov <- findOverlaps(target, gr)\ngr.ov## Hits object with 1 hit and 0 metadata columns:\n##       queryHits subjectHits\n##       <integer>   <integer>\n##   [1]         1           2\n##   -------\n##   queryLength: 1 / subjectLength: 8\ngr[subjectHits(gr.ov)]## GRanges object with 1 range and 2 metadata columns:\n##       seqnames    ranges strand |     disease     gene_id\n##          <Rle> <IRanges>  <Rle> | <character> <character>\n##   [1]     chr1 1800-3900      - |      Asthma       Gene2\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths\nsubsetByOverlaps(gr, target)## GRanges object with 1 range and 2 metadata columns:\n##       seqnames    ranges strand |     disease     gene_id\n##          <Rle> <IRanges>  <Rle> | <character> <character>\n##   [1]     chr1 1800-3900      - |      Asthma       Gene2\n##   -------\n##   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"resources-and-tools-for-epigenetics-in-bioconductor.html","id":"rangedsummarizedexperiment","chapter":"1 Resources and tools for epigenetics in Bioconductor","heading":"1.2.4 RangedSummarizedExperiment","text":"SummarizedExperiment extended RangedSummarizedExperiment, child class contains annotation data features GenomicRanges object. epigenomic example, second primitive class brge_methy object omic functionality, SummarizedExperiment, RangedSummarizedExperiment. Annotation data, variable names given bycan obtained GRanges object, given variable. instance, metadata CpG genomic annotation neighboring genes obtained using array syntaxSubject data can accessed entirely single data.frame variable time. entire subject (phenotype) information retrieved function colData():list symbol $ can used, instance, obtain sex individualsSubsetting entire structure also possible following usual array syntax. example, can select males brge_methy datasetThe metadata() function retrieves experimental datawhich case empty.","code":"\nnames(rowData(brge_methy))##  [1] \"Forward_Sequence\"         \"SourceSeq\"                \"Random_Loci\"              \"Methyl27_Loci\"            \"genes\"                   \n##  [6] \"UCSC_RefGene_Accession\"   \"group\"                    \"Phantom\"                  \"DMR\"                      \"Enhancer\"                \n## [11] \"HMM_Island\"               \"Regulatory_Feature_Name\"  \"Regulatory_Feature_Group\" \"DHS\"\nrowRanges(brge_methy)[, \"genes\"]## GRanges object with 392277 ranges and 1 metadata column:\n##              seqnames    ranges strand |         genes\n##                 <Rle> <IRanges>  <Rle> |   <character>\n##   cg13869341     chr1     15865      * |        WASH5P\n##   cg24669183     chr1    534242      * |              \n##   cg15560884     chr1    710097      * |              \n##   cg01014490     chr1    714177      * |              \n##   cg17505339     chr1    720865      * |              \n##          ...      ...       ...    ... .           ...\n##   cg04964672     chrY   7428198      * |              \n##   cg01086462     chrY   7429349      * |              \n##   cg02233183     chrY  16634382      * | NLGN4Y;NLGN4Y\n##   cg26251715     chrY  21236229      * |        TTTY14\n##   cg25640065     chrY  23569324      * |              \n##   -------\n##   seqinfo: 24 sequences from an unspecified genome; no seqlengths\ncolData(brge_methy)## DataFrame with 20 rows and 9 columns\n##             age      sex           NK     Bcell       CD4T       CD8T         Eos      Mono       Neu\n##       <numeric> <factor>    <numeric> <numeric>  <numeric>  <numeric>   <numeric> <numeric> <numeric>\n## x0017         4   Female -5.81386e-19 0.1735078 0.20406869  0.1009741 0.00000e+00 0.0385654  0.490936\n## x0043         4   Female  1.64826e-03 0.1820172 0.16171272  0.1287722 0.00000e+00 0.0499542  0.491822\n## x0036         4   Male    1.13186e-02 0.1690173 0.15546368  0.1277417 0.00000e+00 0.1027105  0.459632\n## x0041         4   Female  8.50822e-03 0.0697158 0.00732789  0.0321861 0.00000e+00 0.0718280  0.807749\n## x0032         4   Male    0.00000e+00 0.1139780 0.22230399  0.0216090 2.60504e-18 0.0567246  0.575614\n## ...         ...      ...          ...       ...        ...        ...         ...       ...       ...\n## x0018         4   Female    0.0170284 0.0781698   0.112735 0.06796816 8.37770e-03 0.0579535  0.658600\n## x0057         4   Female    0.0000000 0.0797774   0.111072 0.00910489 4.61887e-18 0.1015260  0.686010\n## x0061         4   Female    0.0000000 0.1640266   0.224203 0.13125212 8.51074e-03 0.0382647  0.429575\n## x0077         4   Female    0.0000000 0.1122731   0.168056 0.07840593 6.13397e-02 0.0583411  0.515284\n## x0079         4   Female    0.0120148 0.0913650   0.205830 0.11475389 0.00000e+00 0.0750535  0.513597\nbrge_methy$sex##  [1] Female Female Male   Female Male   Male   Male   Male   Male   Male   Female Female Female Male   Male   Female Female Female Female Female\n## Levels: Female Male\nbrge_methy[, brge_methy$sex == \"male\"]## class: GenomicRatioSet \n## dim: 392277 0 \n## metadata(0):\n## assays(1): Beta\n## rownames(392277): cg13869341 cg24669183 ... cg26251715 cg25640065\n## rowData names(14): Forward_Sequence SourceSeq ... Regulatory_Feature_Group DHS\n## colnames(0):\n## colData names(9): age sex ... Mono Neu\n## Annotation\n##   array: IlluminaHumanMethylation450k\n##   annotation: ilmn12.hg19\n## Preprocessing\n##   Method: NA\n##   minfi version: NA\n##   Manifest version: NA\nmetadata(brge_methy)## list()"},{"path":"pre-processing-of-dna-methylation-data.html","id":"pre-processing-of-dna-methylation-data","chapter":"2 Pre-processing of DNA methylation data","heading":"2 Pre-processing of DNA methylation data","text":"chapter explain steps pre-processing \nDNA methylation data meffil R package. file theory\ncan downloaded ","code":""},{"path":"pre-processing-of-dna-methylation-data.html","id":"creation-of-the-sample-sheet","chapter":"2 Pre-processing of DNA methylation data","heading":"2.1 Creation of the Sample Sheet","text":"loading meffil library, need create sample sheet IDAT files.function automatically adds sample name, slide, row, column filename\nIDATs. can remove columns can manually add .\ncase add sex, age smoking status variables. duplicated\nsamples individual, also add individual ID \nremove duplicates.First load phenotype dataAnd add sex, age smoking status variables, keeping \nsamples metadataFinally can save sample sheet","code":"\nlibrary(meffil)\nsamplesheet <- meffil.create.samplesheet(\"H:/analyses/Course_Intro_to_EWAS/db/GSE42861/Raw/G1\", recursive=TRUE)\ndim(samplesheet)## [1] 298   6\npheno <- read.table(\"H:/analyses/Course_Intro_to_EWAS/db/GSE42861/Phenotype/GSE42861_pheno.txt\", sep = '\\t', header = T)\nhead(pheno)\nsamplesheet <- merge(samplesheet[,c('Sample_Name', 'Slide', 'sentrix_row', 'sentrix_col', 'Basename')], \n                     pheno[,c('Sample', 'Age', 'Sex', 'Smoking')], \n                     by.x = 'Sample_Name', \n                     by.y = 'Sample')\nhead(samplesheet)\nsave(samplesheet, file=\"H:/analyses/Course_Intro_to_EWAS/results/QC/SampleSheetG1.Rdata\")"},{"path":"pre-processing-of-dna-methylation-data.html","id":"sample-and-cpg-quality-control","chapter":"2 Pre-processing of DNA methylation data","heading":"2.2 Sample and CpG quality control","text":"sample sheet, first step QC creation \nQC objects. specify cell type reference (idol optimized)\nthresholds detection minimum number beads.RUN STEP CLASS - time consuming.Instead, load QC Objects provide:, setup parameters QCAnd run itTo generate QC report can run:line creates html report several QC tests. need examine \ndetail.next step getting rid samples pass QC. \ncase, looking report, decided maintain samples\noutliers XY ratio.probes pass QC removed afterwards \nnormalisation step.","code":"\n# DO NOT RUN\n\nmeffil.list.cell.type.references()\nqc.objects <- meffil.qc(samplesheet, cell.type.reference=\"blood idoloptimized\", \n                        verbose=TRUE,\n                        detection.threshold = 0.01,\n                        bead.threshold = 3)\nsave(qc.objects, file = 'H:/analyses/Course_Intro_to_EWAS/results/QC/QCObjects.RData')\nload('H:/analyses/Course_Intro_to_EWAS/results/QC/QCObjects.RData')\nqc.parameters <- meffil.qc.parameters(\n  beadnum.samples.threshold             = 0.05,\n  detectionp.samples.threshold          = 0.03,\n  detectionp.cpgs.threshold             = 0.05, \n  beadnum.cpgs.threshold                = 0.05,\n  sex.outlier.sd                        = 3\n)\nqc.summary <- meffil.qc.summary(\n  qc.objects,\n  parameters = qc.parameters,\n  genotypes=NULL,\n  verbose=TRUE\n)\nmeffil.qc.report(qc.summary, output.file=\"H:/analyses/Course_Intro_to_EWAS/results/QC/qc-report_whole.html\")\noutlier <- qc.summary$bad.samples\noutlier <- outlier[outlier$issue!='X-Y ratio outlier',]\noutlier\nqc.objects <- meffil.remove.samples(qc.objects, outlier$sample.name)"},{"path":"pre-processing-of-dna-methylation-data.html","id":"normalisation","chapter":"2 Pre-processing of DNA methylation data","heading":"2.3 Normalisation","text":"First assess number needed PCs help plot:perform functional normalisation indicating number PCs \nIDs bad CpGs QC remove. step recommended check\nmissingness per sample cpgDO RUN STEPS CLASS - time consuming.Instead, load normalisation objects betas provide:Now can create normalisation report. need convert factor \nbatch variables want assess recalculate PCsFinally, obtain normalisation summary report","code":"\ny <- meffil.plot.pc.fit(qc.objects)\ny$plot\n# DO NOT RUN\nnorm.objects <- meffil.normalize.quantiles(qc.objects, number.pcs=15)\n# DO NOT RUN\nnorm.beta <- meffil.normalize.samples(\n  norm.objects,\n  just.beta=T,\n  remove.poor.signal = T,\n  cpglist.remove=qc.summary$bad.cpgs$name,\n  verbose=T)\n\n# missing per sample - DO NOT RUN\nmiss_IDs <- miss_case_summary(data.frame(t(norm.beta)), order = TRUE)\nmiss_IDs$case <- colnames(norm.beta)\ngc(reset=TRUE)\nbad_ids <- miss_IDs[which(miss_IDs$pct_miss>5),]$case\n\n# missing per cpg - DO NOT RUN\nbad_cpgs <- miss_cpgs[which(miss_cpgs$pct_miss>5),]$variable\nlength(bad_cpgs)\n\n# remove - DO NOT RUN\nnorm.beta <- norm.beta[!rownames(norm.beta) %in% bad_cpgs, !colnames(norm.beta) %in% bad_ids]\nnorm.objects <- norm.objects[!names(norm.objects)%in% bad_ids]\ngc(reset=TRUE)\n\nsave(norm.objects, file = \"H:/analyses/Course_Intro_to_EWAS/results/QC/norm_objects15.RData\")\nsave(norm.beta, file = \"H:/analyses/Course_Intro_to_EWAS/results/QC/norm_beta15.Robj\")\nload(\"H:/analyses/Course_Intro_to_EWAS/results/QC/norm_objects15.RData\")\nload(\"H:/analyses/Course_Intro_to_EWAS/results/QC/norm_beta15.Robj\")\nfor (i in 1:length(norm.objects)){\n  norm.objects[[i]]$samplesheet$Slide<-as.factor(norm.objects[[i]]$samplesheet$Slide)\n  norm.objects[[i]]$samplesheet$Sex<-as.factor(norm.objects[[i]]$samplesheet$Sex)\n  norm.objects[[i]]$samplesheet$Age<-as.factor(norm.objects[[i]]$samplesheet$Age)\n  norm.objects[[i]]$samplesheet$Smoking<-as.factor(norm.objects[[i]]$samplesheet$Smoking)\n}\n\nbatch_var<-c(\"Slide\",\"Sex\", \"Age\", \"Smoking\")\n\nnorm.parameters <- meffil.normalization.parameters(\n  norm.objects,\n  variables=batch_var,\n  control.pcs=1:5,\n  batch.pcs=1:5,\n  batch.threshold=0.01\n)\n\npcs <- meffil.methylation.pcs(norm.beta,verbose=T, full.obj = T)\nnorm.summary <- meffil.normalization.summary(norm.objects, pcs$x, parameters=norm.parameters)\nmeffil.normalization.report(norm.summary, output.file=\"H:/analyses/Course_Intro_to_EWAS/results/QC/normalization-report.html\")"},{"path":"pre-processing-of-dna-methylation-data.html","id":"creation-of-a-expression-set","chapter":"2 Pre-processing of DNA methylation data","heading":"2.4 Creation of a Expression Set","text":"","code":""},{"path":"pre-processing-of-dna-methylation-data.html","id":"estimation-of-cell-type-proportions","chapter":"2 Pre-processing of DNA methylation data","heading":"2.4.1 Estimation of cell type proportions","text":"run EWAS, need know cell type proportions. \nautomatically calculated first steps QC can recovered \nsaved way:add information phenotype already ","code":"\ncc<-t(sapply(qc.objects, function(obj) obj$cell.counts$counts))\ncc<-data.frame(PatientID=row.names(cc),cc) \nwrite.table(cc, file = \"H:/analyses/Course_Intro_to_EWAS/results/QC/cellular_composition.txt\", quote = F, row.names = F, sep = '\\t')\nphenoData <- merge(pheno, cc[,2:7], by.x = 'Sample', by.y = 0)\nrownames(phenoData) <- phenoData[,1]\nphenoData <- phenoData[,-1]\nhead(phenoData)"},{"path":"pre-processing-of-dna-methylation-data.html","id":"assembling","chapter":"2 Pre-processing of DNA methylation data","heading":"2.4.2 Assembling","text":"assemble final ExpressionSet first create metadata \nphenotypes, consists dataframe variables description.\ncreate Annotated Dataframe., join matrix normalized betas annotated\ndataframe phenotypes cellular compositions.\nmake sure sample IDs coincide two datasets.saved ExpressionSet normalised betas \nphenotypes ready run EWAS.RUN STEP CLASS - time consuming. \nprovide eSet needed EWAS.","code":"\nlibrary(Biobase)\nmData <- data.frame(labelDescription=c(\"Sample cell type\",\"Patient Age\", \"Patient Sex\", \"Smoking Status (never/current/former)\",\n                                       \"Percentage of B Lymphocytes\", \"Percentage of CD4T Lymphocytes\",\n                                       \"Percentage of CDBT Lymphocytes\", \"Percentage of Monocytes\", \"Percentage of Neutrophils\",\n                                       \"Percentage of Natural Killer\"),\n                    row.names=colnames(phenoData))\n\nphenoData = new(\"AnnotatedDataFrame\", data=phenoData, varMetadata=mData)\nall(colnames(norm.beta) == rownames(phenoData))## [1] TRUE\neSet<-ExpressionSet(assayData=norm.beta,\n                    phenoData=phenoData)\neSet## ExpressionSet (storageMode: lockedEnvironment)\n## assayData: 483153 features, 294 samples \n##   element names: exprs \n## protocolData: none\n## phenoData\n##   sampleNames: GSM1051533 GSM1051534 ... GSM1052213 (294 total)\n##   varLabels: Celltype Age ... NK (10 total)\n##   varMetadata: labelDescription\n## featureData: none\n## experimentData: use 'experimentData(object)'\n## Annotation:\n# DO NOT RUN\nsaveRDS(eSet, 'H:/analyses/Course_Intro_to_EWAS/results/QC/GSE42861_full_norm.Rds')"},{"path":"epigenome-wide-association-study-ewas.html","id":"epigenome-wide-association-study-ewas","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3 Epigenome-wide association study (EWAS)","text":"chapter run Epigenome-Wide Association Study (EWAS).\nfile theory can downloaded ","code":""},{"path":"epigenome-wide-association-study-ewas.html","id":"install-and-load-packages","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.1 Install and load packages","text":"Today load packages","code":"\nlibrary(Biobase)# to be able to access and modify data in the ExpressionSet\nlibrary(meffil) # to run the EWAS\nlibrary(qqman) # to get QQ plots\nlibrary(ggplot2)# plots\nlibrary(ggrepel)\nlibrary(GenomicRanges) # prepare db for Manhattan plot\nlibrary(karyoploteR) #  Manhattan plot "},{"path":"epigenome-wide-association-study-ewas.html","id":"load-dataset-and-extract-the-phenotypes-and-methylation-matrix","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.2 Load dataset and extract the phenotypes and methylation matrix","text":"begin loading output last step, ExpressionSet \ncontains normalised betas together phenotypes.","code":"\neset.cohort1<-readRDS(\"H:/analyses/Course_Intro_to_EWAS/results/QC/subsets/GSE42861_norm_cohort1.Rds\") \npheno.cohort1<-pData(eset.cohort1)\ndim(pheno.cohort1)## [1] 294  10\nhead(pheno.cohort1)\nmethyl.cohort1<-exprs(eset.cohort1)\ndim(methyl.cohort1) ## [1] 37842   294\nmethyl.cohort1[1:5,1:5]##            GSM1051533 GSM1051534 GSM1051536 GSM1051537 GSM1051538\n## cg02432075 0.09914671 0.05285574 0.11479000 0.09238820 0.05655322\n## cg03515901 0.90775178 0.91091962 0.91043927 0.89217759 0.91384704\n## cg04023335 0.64876572 0.53111687 0.57309345 0.37877619 0.59618924\n## cg08455548 0.07235159 0.07022040 0.09489939 0.08827584 0.06616870\n## cg00006815 0.04753770 0.05215979 0.04847625 0.06924370 0.03970845\ntable(eset.cohort1$Smoking)## \n## current  former   never \n##      89     106      99"},{"path":"epigenome-wide-association-study-ewas.html","id":"run-ewas","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.3 Run EWAS","text":"","code":""},{"path":"epigenome-wide-association-study-ewas.html","id":"data-preparation","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.3.1 Data preparation","text":"show example run analysis testing never smokers \ncurrent smokers. Nevertheless, code can applied run \nanalyses testing never vs former current vs former.first step subset ExpressionSet samples need.\ncase, keep never smokers current smokers,\ngetting rid former smokers.Extract methylationExtract phenodata never current smokersCheck levels. want “never” reference levelSelect exposure variable.Select covariates interest EWAS. interested sex, age\ncell type proportions.\nCheck class covariates running EWASCheck order samples pheno mehtylation matrix.\norder samples ExpressionSet, \nincorrectly assign values variables samples therefore also\nmethylation.","code":"\ncurrent <- pheno.cohort1[pheno.cohort1$Smoking %in% c('never','current'),]\ndim(current)## [1] 188  10\neset.current <- eset.cohort1[,rownames(current)] #subset the eset\neset.current## ExpressionSet (storageMode: lockedEnvironment)\n## assayData: 37842 features, 188 samples \n##   element names: exprs \n## protocolData: none\n## phenoData\n##   sampleNames: GSM1051533 GSM1051534 ... GSM1052213 (188 total)\n##   varLabels: Celltype Age ... NK (10 total)\n##   varMetadata: labelDescription\n## featureData: none\n## experimentData: use 'experimentData(object)'\n## Annotation:\ntable(eset.current$Smoking)## \n## current   never \n##      89      99\nmethyl.current<-exprs(eset.current)\nmethyl.current[1:5,1:5]##            GSM1051533 GSM1051534 GSM1051539 GSM1051541 GSM1051542\n## cg02432075 0.09914671 0.05285574 0.08496137 0.09643806 0.09607922\n## cg03515901 0.90775178 0.91091962 0.92017725 0.88514304 0.93523586\n## cg04023335 0.64876572 0.53111687 0.57413506 0.52785496 0.64774883\n## cg08455548 0.07235159 0.07022040 0.08805554 0.08864486 0.11191411\n## cg00006815 0.04753770 0.05215979 0.05949175 0.05490687 0.05724176\npheno.current<-pData(eset.current)\npheno.current$Smoking<-as.character(pheno.current$Smoking)\npheno.current$Smoking<-as.factor(pheno.current$Smoking)\nlevels(pheno.current$Smoking)## [1] \"current\" \"never\"\npheno.current$Smoking <- relevel(pheno.current$Smoking, \"never\")\nlevels(pheno.current$Smoking)## [1] \"never\"   \"current\"\nvariable <- pheno.current$Smoking\nclass(variable)## [1] \"factor\"\nclass(pheno.current$Age)## [1] \"integer\"\nclass(pheno.current$Sex)## [1] \"character\"\nclass(pheno.current$Bcell)## [1] \"numeric\"\nclass(pheno.current$CD4T)## [1] \"numeric\"\nclass(pheno.current$CD8T)## [1] \"numeric\"\nclass(pheno.current$Mono)## [1] \"numeric\"\nclass(pheno.current$Neu)## [1] \"numeric\"\nclass(pheno.current$NK)## [1] \"numeric\"\npheno.current$Sex<-as.factor(pheno.current$Sex)\ncovariates <- pheno.current[,c(\"Age\",\"Sex\",\"Bcell\",\"CD4T\",\"CD8T\",\"Mono\",\"Neu\",\"NK\")]\ntable(ifelse(rownames(pheno.current)==colnames(methyl.current),\"Matched\",\"--NOT MATCHED--\"))## \n## Matched \n##     188"},{"path":"epigenome-wide-association-study-ewas.html","id":"ewas","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.3.2 EWAS","text":"run EWAS use function meffil.ewas meffil R package. need arguments:beta: Methylattion matrixvariable: vector exposure variable.covariates: dataframe covariates include regression modelrlm: want run robust linear regression model, need specify “TRUE” argument “rlm”winsorize.pct: reduce impact severe outliers DNA methylation data, winsorize methylation beta values (1%), 0.5% upper lower ends distribution (Ghosh & Vogt, 2012)sva (default TRUE). function apply Surrogate Variable Analysis (SVA) methylation levels covariates include resulting variables covariates regression model","code":"\newas.current <- meffil.ewas(methyl.current,\n                            variable=variable,\n                            covariates=covariates,\n                            rlm=TRUE,\n                            winsorize.pct=0.05)## Number of significant surrogate variables is:  31 \n## Iteration (out of 5 ):1  2  3  4  5"},{"path":"epigenome-wide-association-study-ewas.html","id":"results","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.3.3 Results","text":"obtain object different informationWe interested EWAS results. function calculated results without adjusted covariates, adjusted covariates specified \nalso adjusted surrogate variables correct batch (noise)use results analysis adjusted SVACreate column Probe ID, rows results dataframeWe order results p.valueThe column names stand :\n- p.value: pval significance association\n- fdr: p.value corrected FALSE DISCOVERY RATE method\n- p.holm: p.value corrected Holm-Bonferroni method (going use )\n- t.statistic\n- coefficient: coefficient association. case odd ratio (), statistical measure quantify strength association binary variable (effect beta)\n- coefficient.ci.high: confidence interval \n- coefficient.ci.low: confindence interval \n- coefficient.se: standard error coefficient\n- n: sample size included analysis\n- chromosome: chromosome CpG located genome (hg19)\n- position: position CpG genome (hg19)can save results","code":"\nsummary(ewas.current)##                    Length Class           Mode     \n## class                   1 -none-          character\n## version                 1 package_version list     \n## samples               188 -none-          character\n## variable              188 factor          numeric  \n## covariates              8 data.frame      list     \n## winsorize.pct           1 -none-          numeric  \n## batch                   0 -none-          NULL     \n## robust                  1 -none-          logical  \n## rlm                     1 -none-          logical  \n## weights                 0 -none-          NULL     \n## outlier.iqr.factor      1 -none-          logical  \n## most.variable           1 -none-          numeric  \n## p.value            113526 -none-          numeric  \n## coefficient        113526 -none-          numeric  \n## analyses                3 -none-          list     \n## random.seed             1 -none-          numeric  \n## sva.ret                 4 -none-          list\nsummary(ewas.current$analyses)##      Length Class  Mode\n## none 5      -none- list\n## all  5      -none- list\n## sva  5      -none- list\nres.current<-ewas.current$analyses$sva\nres.current<-res.current$table\nres.current$probeID<-rownames(res.current)\nres.current.ord<-res.current[order(res.current$p.value),]\nhead(res.current.ord)\ncolnames(res.current.ord)##  [1] \"p.value\"             \"fdr\"                 \"p.holm\"              \"t.statistic\"        \n##  [5] \"coefficient\"         \"coefficient.ci.high\" \"coefficient.ci.low\"  \"coefficient.se\"     \n##  [9] \"n\"                   \"chromosome\"          \"position\"            \"probeID\"\nwrite.table(res.current.ord,\n            \"H:/analyses/Course_Intro_to_EWAS/results/Results.EWAS.cohort1.NeverVScurrent.txt\",\n            sep=\",\")"},{"path":"epigenome-wide-association-study-ewas.html","id":"report","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.3.4 Report","text":"report need specify CpGs interested . Today\nselect “cg05575921” annotated AHRR gene well known\nassociation tabbacco.","code":"\newas.parameters <- meffil.ewas.parameters(max.plots = 1,model=\"sva\") #by default uses pval/ number of tests\ncandidate.site <- c(\"cg05575921\")\newas.summary <- meffil.ewas.summary(ewas.current,\n                                    methyl.current,\n                                    selected.cpg.sites=candidate.site,\n                                    parameters=ewas.parameters)                             \nmeffil.ewas.report(ewas.summary, output.file=\"H:/analyses/Course_Intro_to_EWAS/results/EWAS.results/Reports/Report.EWAS.cohort1.NeverVScurrent.html\")"},{"path":"epigenome-wide-association-study-ewas.html","id":"explore-the-results","chapter":"3 Epigenome-wide association study (EWAS)","heading":"3.3.5 Explore the results","text":"Lambda QQplot\nlook lambda QQplot examine inflationSignificant hits\nresults corrected multiple testing using FDR method. Significance\ndefined FDR p-value < 0.05. tested 37,842 CpGs.Volcano plot","code":"\nlambda.current<- qchisq(median(res.current.ord$p.value,na.rm=T), df = 1, lower.tail = F)/qchisq(0.5, 1)\nlambda.current ## [1] 1.529736\npvals.current<-res.current.ord$p.value\nqq(pvals.current,main=(\"QQPlot EWAS cohort 1 smoking Never VS Current\")) \ndim(res.current.ord)## [1] 37842    12\nres.current.sig<-res.current.ord[res.current.ord$fdr < 0.05,]\ndim(res.current.sig)## [1] 289  12\nhead(res.current.sig)\ndim(res.current.sig[res.current.sig$coefficient <0,]) ## [1] 164  12\ndim(res.current.sig[res.current.sig$coefficient >0,]) ## [1] 125  12\nres.current.ord$diffexpressed <- \"NO\"\nres.current.ord$diffexpressed[res.current.ord$coefficient > 0 & res.current.ord$fdr <0.05] <- \"POSITIVE\"\nres.current.ord$diffexpressed[res.current.ord$coefficient < 0 & res.current.ord$fdr <0.05] <- \"NEGATIVE\"\n\np <- ggplot(data=res.current.ord, aes(x=res.current.ord$coefficient, y=-log10(res.current.ord$p.value), col=res.current.ord$diffexpressed)) +\n  xlim(c(-0.3,0.3))+ ylim(c(0,35)) + \n  geom_point(size = 1.5) + theme_minimal() +\n  labs(title = \" \", x = \"beta\", y = \"-log10(P-value)\", colour = \"Effect\") + \n  theme(axis.title = element_text(size = 14, color = \"black\",vjust=0.5)) + \n  theme(plot.title = element_text(size = 14,face=\"bold\",color=\"black\", hjust= 0.5, vjust=0.5)) + \n  theme(legend.title = element_text(color = \"black\", size = 14))\n\n\n# Add lines as before...\np2 <- p + geom_hline(yintercept=c(-log10(3.86e-04)), col=c(\"red\"),linetype = \"dashed\") + \n  theme(axis.text = element_text(size = 14)) #threshold  FDR (0.05) = p.val 3.86-04\nmycolors<-c(\"#157F8D\",\"#AF8D9B\", \"grey\")\nnames(mycolors) <- c(\"POSITIVE\", \"NEGATIVE\", \"NO\")\n\np3 <- p2 + scale_colour_manual(values = mycolors)\n\np3\n# Create a dataframe with chr, start, end and pval\ndf.current<-res.current.ord[,c(\"chromosome\",\"position\",\"p.value\")]\nhead(df.current)\ndf.current$start<-df.current$position \ndf.current$end<-df.current$position + 1\ncolnames(df.current)<-c(\"chr\",\"position\",\"p.value\",\"start\",\"end\")\ndf.current<-df.current[,c(\"chr\",\"start\",\"end\",\"p.value\")]\n\n# Create GRanges object needed \ndf.GRanges<-makeGRangesFromDataFrame(df.current)\n\nkp <- plotKaryotype(plot.type=4, labels.plotter = NULL)\nkp <- kpAddChromosomeNames(kp, cex=0.6, srt=45)\nkp <- kpPlotManhattan(kp, data=df.GRanges,pval=df.current$p.value, ymax=40,genomewideline =3.42)\nkp <- kpAxis(kp, ymin=0, ymax=40, cex=0.7)"},{"path":"meta-analysis-of-epigenome-wide-association-studies-metaewas.html","id":"meta-analysis-of-epigenome-wide-association-studies-metaewas","chapter":"4 Meta-analysis of epigenome-wide association studies (metaEWAS)","heading":"4 Meta-analysis of epigenome-wide association studies (metaEWAS)","text":"chapter run meta-analysis epigenome-wide association studies (metaEWAS).\nfile theory can downloaded ","code":""},{"path":"meta-analysis-of-epigenome-wide-association-studies-metaewas.html","id":"install-and-load-packages-1","chapter":"4 Meta-analysis of epigenome-wide association studies (metaEWAS)","heading":"4.1 Install and load packages","text":"Today load packages","code":""},{"path":"meta-analysis-of-epigenome-wide-association-studies-metaewas.html","id":"quality-control-of-results-from-different-studies","chapter":"4 Meta-analysis of epigenome-wide association studies (metaEWAS)","heading":"4.2 Quality control of results from different studies","text":"","code":""},{"path":"meta-analysis-of-epigenome-wide-association-studies-metaewas.html","id":"statistical-methods-to-combine-results-from-different-studies","chapter":"4 Meta-analysis of epigenome-wide association studies (metaEWAS)","heading":"4.3 Statistical methods to combine results from different studies","text":"","code":""},{"path":"meta-analysis-of-epigenome-wide-association-studies-metaewas.html","id":"visualization-of-results-qq-plot-manhattan-volcano","chapter":"4 Meta-analysis of epigenome-wide association studies (metaEWAS)","heading":"4.4 Visualization of results: QQ-plot, Manhattan, Volcano","text":"","code":""},{"path":"epigenome-wide-association-study-ewas-1.html","id":"epigenome-wide-association-study-ewas-1","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5 Epigenome-wide association study (EWAS)","text":"chapter run Epigenome-Wide Association Study (EWAS)","code":""},{"path":"epigenome-wide-association-study-ewas-1.html","id":"install-and-load-packages-2","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.1 Install and load packages","text":"Today load packages","code":"\nlibrary(data.table)\nlibrary(qqman)\nlibrary(metafor)\nlibrary(reshape)\nlibrary(plyr)\n#library(IlluminaHumanMethylation450kanno.ilmn12.hg19)\nlibrary(ggplot2)# plots\nlibrary(ggrepel)\nlibrary(GenomicRanges) # prepare db for Manhattan plot\nlibrary(karyoploteR)"},{"path":"epigenome-wide-association-study-ewas-1.html","id":"load-ewas-results-by-cohort","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.2 Load EWAS results by cohort","text":"show example run metaEWAS testing never smokers \ncurrent smokers. Nevertheless, code can applied run \nanalyses testing never vs former current vs former.begin loading Never vs Current EWAS results 3 cohorts:\ncohort1, cohort2 cohort3.","code":"\nEWASres.cohort1 <- read.table(file = \"Results.EWAS.cohort1.NeverVScurrent.txt\",sep=\",\",header = TRUE)\nEWASres.cohort2 <- read.table(file = \"Results.EWAS.cohort2.NeverVScurrent.txt\",sep=\",\",header = TRUE)\nEWASres.cohort3 <- read.table(file = \"Results.EWAS.cohort3.NeverVScurrent.txt\",sep=\",\",header = TRUE)"},{"path":"epigenome-wide-association-study-ewas-1.html","id":"quality-control-of-ewas-results-from-the-different-studies","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.3 Quality control of EWAS results from the different studies","text":"running metaEWAS, really important check quality \nEWAS results want combine meta-analysis.\nincludes:\n- examining inflation\n- create beta’s box plot\n- create precision plot","code":"\n#Set wd\n\n#res.dir<-\"V:/analyses/Course_Intro_to_EWAS/results\"\n#setwd(res.dir)\n\n#Create the directory to save EWAS results\ndir.create(\"MA.results\")\n\nsetwd(paste0(res.dir,\"/MA.results\"))\ndir.create(\"QC\")\nsetwd(paste0(res.dir,\"/MA.results/QC\"))"},{"path":"epigenome-wide-association-study-ewas-1.html","id":"lambda-and-qqplot","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.3.1 Lambda and qqplot","text":"look lambda QQplot examine inflation","code":"\nlambda.cohort1<- qchisq(median(EWASres.cohort1$p.value,na.rm=T), df = 1, lower.tail = F)/qchisq(0.5, 1) \nlambda.cohort2<- qchisq(median(EWASres.cohort2$p.value,na.rm=T), df = 1, lower.tail = F)/qchisq(0.5, 1)\nlambda.cohort3<- qchisq(median(EWASres.cohort3$p.value,na.rm=T), df = 1, lower.tail = F)/qchisq(0.5, 1)\n\nlambdas<-cbind(lambda.cohort1,lambda.cohort2,lambda.cohort3)\nlambdas\nwrite.table(lambdas,\"Lambdas.NeverVScurrent.txt\",sep=\",\")\n#cohort 1\npvals.cohort1<-EWASres.cohort1$p.value\nqq(pvals.cohort1,main=(\"QQPlot EWAS cohort 1 smoking Never VS Current\")) \n \n#cohort 2\npvals.cohort2<-EWASres.cohort2$p.value\nqq(pvals.cohort2,main=(\"QQPlot EWAS cohort 2 smoking Never VS Current\")) \n \n#cohort 3\npvals.cohort3<-EWASres.cohort3$p.value\nqq(pvals.cohort3,main=(\"QQPlot EWAS cohort 3 smoking Never VS Current\")) "},{"path":"epigenome-wide-association-study-ewas-1.html","id":"box-plot-and-precision-plot","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.3.2 Box plot and Precision plot","text":"create beta’s box plot precision plot comparing different EWAS resultsFirst, prepare dataframe beta information three cohorts.Beta’s Box plotPrecision plotBy plotting 1 divided median effect SE square root sample size cohort.","code":"\n#create df for Box plot\n\nQCPlot_cohort1<-EWASres.cohort1[,c(\"probeID\",\"coefficient\")]\nQCPlot_cohort1$Cohort<-\"cohort1\"\nhead(QCPlot_cohort1)\n\nQCPlot_cohort2<-EWASres.cohort2[,c(\"probeID\",\"coefficient\")]\nQCPlot_cohort2$Cohort<-\"cohort2\"\nhead(QCPlot_cohort2)\n\nQCPlot_cohort3<-EWASres.cohort3[,c(\"probeID\",\"coefficient\")]\nQCPlot_cohort3$Cohort<-\"cohort3\"\nhead(QCPlot_cohort3)\n\nQCPlot.df<-rbind(QCPlot_cohort1,QCPlot_cohort2,QCPlot_cohort3)\np1<-ggplot(data=QCPlot.df,aes(x=Cohort, y=coefficient, fill=Cohort)) +\n  geom_boxplot() \np1\ninvSE_cohort1<-1/median(EWASres.cohort1$coefficient.se)\ninvSE_cohort2<-1/median(EWASres.cohort2$coefficient.se)\ninvSE_cohort3<-1/median(EWASres.cohort3$coefficient.se)\n                        \n\nprecision <- data.frame(\n  Cohort = c(\"cohort1\",\"cohort2\",\"cohort3\"),\n  N = c(188, 176, 166),\n  invSE= c(invSE_cohort1,invSE_cohort2,invSE_cohort3))\n  \nprecision$sqrt_N<-sqrt(precision$N)\nhead(precision)\np2<-ggplot(data=precision,aes(x=sqrt_N, y=invSE, color=Cohort)) +  geom_point() \np2"},{"path":"epigenome-wide-association-study-ewas-1.html","id":"statistical-methods-to-combine-results-from-different-studies-1","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.4 Statistical methods to combine results from different studies","text":"combine results fixed-effect weight meta-analysis using Metafor R package","code":""},{"path":"epigenome-wide-association-study-ewas-1.html","id":"data-preparation-1","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.4.1 Data preparation","text":"want create dataframe merging EWAS results three cohorts\n(probeID, coefficient, se, p.value, n)First, subset EWAS results probeID, coefficient, se .p.value n\nchange name column order merge results dataframeSecond, merge EWAS results 3 cohortsThen, create new column total N metaEWAS remove \nprobes present <50% cohorts","code":"\n# sample_list <- c(\"Results.EWAS.cohort1.NeverVScurrent.txt\",\"Results.EWAS.cohort2.NeverVScurrent.txt\",\"Results.EWAS.cohort3.NeverVScurrent.txt\")\n# \n# translation.table <- matrix(c(\"probeID\", \"probeID\",\"probeID\", \"BETA\",\"BETA\",\"BETA\", \"SE\", \"SE\",\"SE\", \"P_VAL\", \"P_VAL\",\"P_VAL\"), ncol=2, byrow=TRUE)\n# write.table(translation.table, \"translation.table.txt\")\n\n# EWASres.cohort1$N<-188\n# EWASres.cohort1$N<-176\n# EWASres.cohort1$N<-166\n\nEWASres.cohort1<-EWASres.cohort1[,c(\"probeID\",\"coefficient\", \"coefficient.se\",\"p.value\",\"n\")]\nEWASres.cohort2<-EWASres.cohort2[,c(\"probeID\",\"coefficient\", \"coefficient.se\",\"p.value\",\"n\")]\nEWASres.cohort3<-EWASres.cohort3[,c(\"probeID\",\"coefficient\", \"coefficient.se\",\"p.value\",\"n\")]\n#sample_N <- data.frame(file = sample_list, N = c(188,176,166), stringsAsFactors = FALSE)\nnames(EWASres.cohort1)<- c(\"probe\", \"coef_cohort1\", \"se_cohort1\", \"P_VAL_cohort1\", \"N_for_probe_cohort1\")\nnames(EWASres.cohort2)<- c(\"probe\", \"coef_cohort2\", \"se_cohort2\", \"P_VAL_cohort2\", \"N_for_probe_cohort2\")\nnames(EWASres.cohort3)<- c(\"probe\", \"coef_cohort3\", \"se_cohort3\", \"P_VAL_cohort3\", \"N_for_probe_cohort3\")\ndat <- merge(EWASres.cohort1, EWASres.cohort2, by=\"probe\", all.x=TRUE, all.y=TRUE)\ndat <- merge(dat, EWASres.cohort3, by=\"probe\", all.x=TRUE, all.y=TRUE)\ndim(dat)\nhead(dat)\ndat$N <- rowSums(dat[,c(\"N_for_probe_cohort1\", \"N_for_probe_cohort2\", \"N_for_probe_cohort3\")], na.rm=TRUE)\ntotN = sum(max(dat$N_for_probe_cohort1, na.rm=TRUE), max(dat$N_for_probe_cohort2, na.rm=TRUE), max(dat$N_for_probe_cohort3, na.rm=TRUE))\ndatN <- dat[,c(\"probe\", \"N_for_probe_cohort1\", \"N_for_probe_cohort2\", \"N_for_probe_cohort3\")]\ndatN <- datN[which(rowMeans(!is.na(datN[-1]))>=0.5),]\ndat <- dat[which(dat$probe %in% datN$probe),]\ndat<-dat[which(dat$N >= totN/2),]\ndat <- droplevels(dat)\nstudies <- c(\"cohort1\",\"cohort2\",\"cohort3\")\nhead(dat)"},{"path":"epigenome-wide-association-study-ewas-1.html","id":"run-fixed-effect-meta-analysis","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.4.2 Run fixed effect meta-analysis","text":"run Never vs Current metaEWAS, use tha functions (without edition)fixed.effects.meta.analysis functionextract..merge.meta.analysis function","code":"\nfixed.effects.meta.analysis <- function(list.of.studies,data){\n  require(metafor)\n  coefs = data[,c(\"probe\",paste0(\"coef_\",list.of.studies))]\n  ses = data[,c(\"probe\",paste0(\"se_\",list.of.studies))]\n  require(reshape)\n  coefs = melt(coefs)\n  coefs = cbind(coefs, colsplit(coefs$variable, \"_\", names = c(\"var\", \"study\")))\n  coefs <- coefs[,c(\"probe\",\"study\",\"value\")]\n  names(coefs) <- c(\"probe\",\"study\",\"coef\")\n  ses = melt(ses)\n  data.long = cbind(coefs,ses[,\"value\"])\n  names(data.long)<-c(\"probe\",\"study\",\"coef\",\"se\")\n  res = split(data.long, f=data$probe)\n  res = lapply(res, function(x) rma.uni(slab=x$study, yi=x$coef,sei=x$se,method=\"FE\",weighted=TRUE))\n  res\n}\nextract.and.merge.meta.analysis <-function(meta.res,data){\n  require(plyr)\n  data.meta = ldply(lapply(meta.res, function(x) unlist(c(x$b[[1]],x[c(\"se\",\"pval\",\"QE\",\"QEp\",\"I2\",\"H2\")]))))\n  colnames(data.meta)<-c(\"probe\",\"coef.fe\",\"se.fe\",\"p.fe\",\"q.fe\",\"het.p.fe\",\"i2.fe\",\"h2.fe\")\n  data = merge(data,data.meta,by=\"probe\",all.x=T)\n  data\n}\nmeta.results.current <- fixed.effects.meta.analysis(list.of.studies = studies, data = dat)\ndat.current <- extract.and.merge.meta.analysis(meta.res = meta.results.current, data = dat)\ndat.current$fdr<-p.adjust(dat.current$p.fe, method = \"fdr\")\nhead(dat.current)"},{"path":"epigenome-wide-association-study-ewas-1.html","id":"explore-the-results-1","chapter":"5 Epigenome-wide association study (EWAS)","heading":"5.4.3 Explore the results","text":"order results metaEWAS p.valueSignificant hits\nresults corrected multiple testing using FDR method. Significance\ndefined FDR p-value < 0.05.Lambda QQplotVolcano plotForest plot","code":"\ndat.current.ord<-dat.current[order(dat.current$p.fe),]\ndim(dat.current.ord)\n\nwrite.table(xxxx)\nsig.current<-dat.current.ord[dat.current.ord$fdr <0.05,]\ndim(sig.current)\nhead(sig.current)\nlambda.current<- qchisq(median(dat.current.ord$p.fe,na.rm=T), df = 1, lower.tail = F)/qchisq(0.5, 1)\nlambda.current \npvals.current<-dat.current.ord$p.fe\nqq(pvals.current,main=(\"QQPlot metaEWAS smoking Never VS Current\")) \ndat.current.ord$diffexpressed <- \"NO\"\ndat.current.ord$diffexpressed[dat.current.ord$coef.fe  > 0 & dat.current.ord$fdr <0.05] <- \"POSITIVE\"\ndat.current.ord$diffexpressed[dat.current.ord$coef.fe  < 0 & dat.current.ord$fdr <0.05] <- \"NEGATIVE\"\n\np <- ggplot(data=dat.current.ord, aes(x=dat.current.ord$coef.fe, y=-log10(dat.current.ord$p.fe), col=dat.current.ord$diffexpressed)) +\n  xlim(c(-0.3,0.3))+ ylim(c(0,130)) + \n  geom_point(size = 2) + theme_minimal() +\n  labs(title = \" \", x = \"beta\", y = \"-log10(P-value)\", colour = \"Effect\") + \n  theme(axis.title = element_text(family = \"Helvetica\", size = 14, color = \"black\",vjust=0.5)) + \n  theme(plot.title = element_text(family = \"Helvetica\",size=14,face=\"bold\",color=\"black\", hjust= 0.5, vjust=0.5)) + \n  theme(legend.title = element_text(family = \"Helvetica\", color = \"black\", size = 14))\n\np2 <- p + geom_hline(yintercept=c(-log10(0.012)), col=c(\"red\"),linetype = \"dashed\") + \n  theme(axis.text = element_text(size = 14))\nmycolors<-c(\"#157F8D\",\"#AF8D9B\", \"grey\")\nnames(mycolors) <- c(\"POSITIVE\", \"NEGATIVE\", \"NO\")\n\np3 <- p2 + scale_colour_manual(values = mycolors)\n\np3\n#Forest plots\n\nX<-\"cg05575921\"\nG<-\"AHRR\"\nI2<-dat.current.ord$i2.fe\nforest(meta.results.current$cg05575921,digits=4,\n       xlab=expression(paste(\"Change in DNA methylation never vs current\")),\n       mlab=\"Fixed-effects meta-analysis\",col=\"deepskyblue2\",border=\"deepskyblue2\",cex=0.8)\n#title(paste0(\"Forest plot for probe:\\n\", X,\" (\",G,\"), I-squared: \",I2,\"\"),line=-2)"},{"path":"biological-interpretation-of-findings.html","id":"biological-interpretation-of-findings","chapter":"6 Biological interpretation of findings","heading":"6 Biological interpretation of findings","text":"chapter explain steps biological interpretation \nfindings. file theory\ncan downloaded hereWe need load libraries:","code":"\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)\nlibrary(enrichplot)"},{"path":"biological-interpretation-of-findings.html","id":"annotation-of-cpg-sites","chapter":"6 Biological interpretation of findings","heading":"6.1 Annotation of CpG sites","text":"obtained list CpGs significant analysis,\nneed locate genome try know structures\nsurround . annotation consists obtaining information:","code":""},{"path":"biological-interpretation-of-findings.html","id":"functional-enrichment-analysis","chapter":"6 Biological interpretation of findings","heading":"6.2 Functional enrichment analysis","text":"idea compare list genes overlap CpGs list \nhuman genes anotated specific databases. , can see\nlist genes random subset .work Gene Ontology (GO) Kyoto Encyclopedia \nGenes Genomes (KEGG) databases. GO database allows us see \nspecific gene function overrepresented gene list. KEGG database\nshow specific pathway overrepresented gene list.First need obtain list human genes curated databasesAnd run analyses one keep interesting results.Finally can perform different type plots see results graphical way","code":"\n# GO\ndf = as.data.frame(org.Hs.egGO)\ngo_gene_list = unique(sort(df$gene_id))\n\n# KEGG\ndfk = as.data.frame(org.Hs.egPATH)\nkegg_gene_list = unique(sort(dfk$gene_id))\nans.go <- enrichGO(gene = entrez, ont = \"BP\",\n                   OrgDb =\"org.Hs.eg.db\",\n                   universe = go_gene_list,\n                   readable=TRUE,\n                   pvalueCutoff = 0.05)\n\ntab.go <- as.data.frame(ans.go)\ntab.go<- subset(tab.go, Count>5)\n\nans.kegg <- enrichKEGG(gene = entrez,\n                       organism = 'hsa',\n                       universe = kegg_gene_list,\n                       pvalueCutoff = 0.05)\ntab.kegg <- as.data.frame(ans.kegg)\ntab.kegg<- subset(tab.kegg, Count>5)\np1 <- barplot(ans.go, showCategory=10) + ggtitle('GO - no MCH') + theme(plot.title = element_text(size = 25))\np1\nans.go <- pairwise_termsim(ans.go)\np5 <- emapplot(ans.go) + ggtitle('GO - no MCH') + theme(plot.title = element_text(size = 25))\np5"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
